$date
	Tue Apr 15 12:20:43 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_conv $end
$var wire 96 ! outData [95:0] $end
$var wire 1 " finalCompute $end
$var parameter 32 # CHANNELS $end
$var parameter 32 $ INPUT_DATA_WIDTH $end
$var parameter 32 % INPUT_TILE_SIZE $end
$var parameter 32 & KERNEL_DATA_WIDTH $end
$var parameter 32 ' KERNEL_SIZE $end
$var parameter 34 ( OUTPUT_BIT_WIDTH $end
$var parameter 34 ) OUTPUT_TILE_SIZE $end
$var reg 1 * clk $end
$var reg 384 + inpData [383:0] $end
$var reg 216 , kernel [215:0] $end
$var reg 1 - reset $end
$scope module uut $end
$var wire 1 * clk $end
$var wire 384 . inpData [383:0] $end
$var wire 216 / kernel [215:0] $end
$var wire 1 - reset $end
$var parameter 32 0 CHANNELS $end
$var parameter 32 1 INPUT_DATA_WIDTH $end
$var parameter 32 2 INPUT_TILE_SIZE $end
$var parameter 32 3 KERNEL_DATA_WIDTH $end
$var parameter 32 4 KERNEL_SIZE $end
$var parameter 34 5 OUTPUT_BIT_WIDTH $end
$var parameter 34 6 OUTPUT_TILE_SIZE $end
$var reg 1 " finalCompute $end
$var reg 96 7 outData [95:0] $end
$var integer 32 8 c [31:0] $end
$var integer 32 9 i [31:0] $end
$var integer 32 : input_index [31:0] $end
$var integer 32 ; j [31:0] $end
$var integer 32 < kernel_index [31:0] $end
$var integer 32 = m [31:0] $end
$var integer 32 > n [31:0] $end
$var integer 32 ? out_index [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10 6
b11000 5
b11 4
b1000 3
b100 2
b1000 1
b11 0
b10 )
b11000 (
b11 '
b1000 &
b100 %
b1000 $
b11 #
$end
#0
$dumpvars
b0 ?
bx >
bx =
b0 <
bx ;
b0 :
bx 9
bx 8
bx 7
b0 /
b0 .
1-
b0 ,
b0 +
0*
x"
bx !
$end
#5000
b0 !
b0 7
0"
1*
#10000
0*
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111000100000000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000100000001100000100111111111111111011111101111111000000000111111110000000111111110000000000000000000000000011111111 +
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111000100000000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000100000001100000100111111111111111011111101111111000000000111111110000000111111110000000000000000000000000011111111 .
b10000000000000001000000000000000100000000000000010000000000000001000000010000000100000010000000010000000100000010000000010000000100000010000000010000000000000000000000000000000100000000000000000000000000000001000 ,
b10000000000000001000000000000000100000000000000010000000000000001000000010000000100000010000000010000000100000010000000010000000100000010000000010000000000000000000000000000000100000000000000000000000000000001000 /
0-
#15000
1"
b1100000 ?
b101100000000000000000000101010000000000000000000111011000000000000000001000011000 !
b101100000000000000000000101010000000000000000000111011000000000000000001000011000 7
b11 >
b11 =
b11011000 <
b110000000 :
b10 ;
b10 9
b11 8
1*
#20000
0*
#25000
b0 !
b0 7
0"
1*
1-
#30000
0*
#35000
1"
b111010000000000000000000111010000000000000000000111010000000000000000000111010000 !
b111010000000000000000000111010000000000000000000111010000000000000000000111010000 7
b1100000 ?
b11 >
b11 =
b11011000 <
b10 ;
b10 9
b11 8
b110000000 :
1*
b100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100 +
b100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100 .
0-
#40000
0*
#45000
b1100000 ?
b11 >
b11 =
b11011000 <
b10 ;
b10 9
b11 8
b110000000 :
1*
